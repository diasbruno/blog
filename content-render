#!/usr/bin/env bash

set -eu

source "${PWD}/tools.bash"
source "${PWD}/template.bash"

MARKDOWN="comrak --unsafe "

function render_content {
    if [ "${1}" -eq "0" ]; then
	update_base_dir ".."
    fi

    source "${2}/metadata.sh"

    log "rendering ${TITLE} `basename ${2}`"

    DEST="${3}/${FILENAME}.html"

    local the_title=$TITLE
    local the_date=`render_date "${DATE}"`
    local the_content=`cat $PWD/contents/$FILENAME/content.md`

    render_html_wrapper $DEST "`cat <<-EOF | $MARKDOWN
# ${the_title}

<div class="content-info"><span class="content-kind">article</span> &#10072; <time class="content-datetime" datetime="${DATE}">${the_date}</time></div>

${the_content}
EOF`"
}

function render_all_content {
    local ppath="${PWD}/contents"
    local contents="`ls ${ppath}`"

    for x in $contents; do
	render_content $1 "$ppath/$x" $2
    done
}

function render_article_item {
    source "${1}/metadata.sh"

    local the_title=$TITLE
    local the_date=`render_date "${DATE}"`

    echo "<div><a href="./articles/`basename ${FILENAME}`.html"><h1>${the_title}</h1></a><time class="content-datetime" datetime="${DATE}">${the_date}</time></div>";
}

function render_index {
    DEST="${2}/index.html"

    if [ "${1}" -eq "0" ]; then
	update_base_dir "."
    fi

    local from="${PWD}/contents"
    local all_articles=""

    for x in `ls ${from}`; do
	all_articles="${all_articles}`render_article_item "${from}/${x}"`";
    done

    render_html_wrapper $DEST "`cat <<-EOF | $MARKDOWN
${all_articles}
EOF`"
}
